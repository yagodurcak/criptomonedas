'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// murmurhash2 via https://gist.github.com/raycmorgan/588423

function hashString(str) {
  return hash(str, str.length).toString(36);
}

function hash(str, seed) {
  var m = 0x5bd1e995;
  var r = 24;
  var h = seed ^ str.length;
  var length = str.length;
  var currentIndex = 0;

  while (length >= 4) {
    var k = UInt32(str, currentIndex);

    k = Umul32(k, m);
    k ^= k >>> r;
    k = Umul32(k, m);

    h = Umul32(h, m);
    h ^= k;

    currentIndex += 4;
    length -= 4;
  }

  switch (length) {
    case 3:
      h ^= UInt16(str, currentIndex);
      h ^= str.charCodeAt(currentIndex + 2) << 16;
      h = Umul32(h, m);
      break;

    case 2:
      h ^= UInt16(str, currentIndex);
      h = Umul32(h, m);
      break;

    case 1:
      h ^= str.charCodeAt(currentIndex);
      h = Umul32(h, m);
      break;
  }

  h ^= h >>> 13;
  h = Umul32(h, m);
  h ^= h >>> 15;

  return h >>> 0;
}

function UInt32(str, pos) {
  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
}

function UInt16(str, pos) {
  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
}

function Umul32(n, m) {
  n = n | 0;
  m = m | 0;
  var nlo = n & 0xffff;
  var nhi = n >>> 16;
  var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
  return res;
}

var ma = function ca(da) {
  function T(b, c, d, k, l) {
    for (var a = 0, f = 0, m = 0, e = 0, r, n, h, w = 0, A = 0, B = 0, y = 0, p = 0, q = 0, t = r = 0, x = n = 0, I = 0, C = d.length, J = C - 1, v, g = "", u = "", S = "", L = "", F; t < C;) {
      h = d.charCodeAt(t);if (0 === f + e + m + a) {
        if (t === J && (0 < n && (g = g.replace(N, "")), 0 < g.trim().length)) {
          switch (h) {case 32:case 9:case 59:case 13:case 10:
              break;default:
              g += d.charAt(t);}h = 59;
        }if (1 === x) switch (h) {case 123:case 44:
            x = 0;break;case 9:case 13:case 10:case 32:
            break;default:
            t--, h = 59;}switch (h) {case 123:
            g = g.trim();r = g.charCodeAt(0);y = 1;for (p = ++t; t < C;) {
              h = d.charCodeAt(t);switch (h) {case 123:
                  y++;break;case 125:
                  y--;}if (0 === y) break;t++;
            }q = d.substring(p, t);0 === r && (r = (g = g.replace(na, "").trim()).charCodeAt(0));switch (r) {case 64:
                0 < n && (g = g.replace(N, ""));n = g.charCodeAt(1);switch (n) {case 100:case 109:case 115:
                    h = c;break;default:
                    h = U;}q = T(c, h, q, n, l + 1);p = q.length;0 < V && 0 === p && (p = g.length);0 < D && (h = ea(U, g, I), F = M(3, q, h, c, G, z, p, n, l), g = h.join(""), void 0 !== F && 0 === (p = (q = F.trim()).length) && (n = 0, q = ""));if (0 < p) switch (n) {case 115:
                    g = g.replace(oa, pa);case 100:case 109:
                    q = g + "{" + q + "}";break;case 107:
                    g = g.replace(qa, "$1 $2" + (0 < O ? P : ""));q = g + "{" + q + "}";q = "@" + (0 < Q ? "-webkit-" + q + "@" + q : q);break;default:
                    q = g + q;} else q = "";break;default:
                q = T(c, ea(c, g, I), q, k, l + 1);}S += q;q = I = n = r = x = p = 0;g = "";h = d.charCodeAt(++t);break;case 125:case 59:
            g = (0 < n ? g.replace(N, "") : g).trim();if (1 < (p = g.length)) switch (0 === r && (r = g.charCodeAt(0), 45 === r || 96 < r && 123 > r) && (p = (g = g.replace(" ", ":")).length), 0 < D && void 0 !== (F = M(1, g, c, b, G, z, u.length, k, l)) && 0 === (p = (g = F.trim()).length) && (g = "\x00\x00"), r = g.charCodeAt(0), n = g.charCodeAt(1), r + n) {case 0:
                break;case 169:case 163:
                L += g + d.charAt(t);break;default:
                58 !== g.charCodeAt(p - 1) && (u += fa(g, r, n, g.charCodeAt(2)));}I = n = r = x = p = 0;g = "";h = d.charCodeAt(++t);}
      }switch (h) {case 13:case 10:
          if (0 === f + e + m + a + ha) switch (B) {case 41:case 39:case 34:case 64:case 126:case 62:case 42:case 43:case 47:case 45:case 58:case 44:case 59:case 123:case 125:
              break;default:
              0 < r && (x = 1);}47 === f && (f = 0);0 < D * ia && M(0, g, c, b, G, z, u.length, k, l);z = 1;G++;break;case 59:case 125:
          if (0 === f + e + m + a) {
            z++;break;
          }default:
          z++;v = d.charAt(t);switch (h) {case 9:case 32:
              if (0 === e + a) switch (w) {case 44:case 58:case 9:case 32:
                  v = "";break;default:
                  32 !== h && (v = " ");}break;case 0:
              v = "\\0";break;case 12:
              v = "\\f";break;case 11:
              v = "\\v";break;case 38:
              0 === e + f + a && 0 < E && (n = I = 1, v = "\f" + v);break;case 108:
              if (0 === e + f + a + K && 0 < r) switch (t - r) {case 2:
                  112 === w && 58 === d.charCodeAt(t - 3) && (K = w);case 8:
                  111 === A && (K = A);}break;case 58:
              0 === e + f + a && (r = t);break;case 44:
              0 === f + m + e + a && (n = 1, v += "\r");break;case 34:
              0 === f && (e = e === h ? 0 : 0 === e ? h : e, t === J && (J++, C++));break;case 39:
              0 === f && (e = e === h ? 0 : 0 === e ? h : e, t === J && (J++, C++));break;
            case 91:
              0 === e + f + m && a++;break;case 93:
              0 === e + f + m && a--;break;case 41:
              0 === e + f + a && (t === J && (J++, C++), m--);break;case 40:
              if (0 === e + f + a) {
                if (0 === p) switch (2 * w + 3 * A) {case 533:
                    break;default:
                    y = 0, p = 1;}m++;
              }break;case 64:
              0 === f + m + e + a + r + q && (q = 1);break;case 42:case 47:
              if (!(0 < e + a + m)) switch (f) {case 0:
                  switch (2 * h + 3 * d.charCodeAt(t + 1)) {case 235:
                      f = 47;break;case 220:
                      f = 42;}break;case 42:
                  47 === h && 42 === w && (v = "", f = 0);}}if (0 === f) {
            if (0 === E + e + a + q && 107 !== k && 59 !== h) switch (h) {case 44:case 126:case 62:case 43:case 41:case 40:
                if (0 === p) {
                  switch (w) {case 9:case 32:case 10:case 13:
                      v += "\x00";break;default:
                      v = "\x00" + v + (44 === h ? "" : "\x00");}n = 1;
                } else switch (h) {case 40:
                    p = ++y;break;case 41:
                    0 === (p = --y) && (n = 1, v += "\x00");}break;case 32:
                switch (w) {case 0:case 123:case 125:case 59:case 44:case 12:case 9:case 32:case 10:case 13:
                    break;default:
                    0 === p && (n = 1, v += "\x00");}}g += v;32 !== h && (B = h);
          }}A = w;w = h;t++;
    }p = u.length;0 < V && 0 === p && 0 === S.length && 0 === c[0].length === !1 && (109 !== k || 1 === c.length && (0 < E ? H : R) === c[0]) && (p = c.join(",").length + 2);if (0 < p) {
      if (0 === E && 107 !== k) {
        d = 0;a = c.length;for (f = Array(a); d < a; ++d) {
          w = c[d].split(ra);
          A = "";B = 0;for (C = w.length; B < C; ++B) {
            if (!(0 === (y = (e = w[B]).length) && 1 < C)) {
              t = A.charCodeAt(A.length - 1);I = e.charCodeAt(0);m = "";if (0 !== B) switch (t) {case 42:case 126:case 62:case 43:case 32:case 40:
                  break;default:
                  m = " ";}switch (I) {case 38:
                  e = m + H;case 126:case 62:case 43:case 32:case 41:case 40:
                  break;case 91:
                  e = m + e + H;break;case 58:
                  switch (2 * e.charCodeAt(1) + 3 * e.charCodeAt(2)) {case 530:
                      if (0 < W) {
                        e = m + e.substring(8, y - 1);break;
                      }default:
                      if (1 > B || 1 > w[B - 1].length) e = m + H + e;}break;case 44:
                  m = "";default:
                  e = 1 < y && 0 < e.indexOf(":") ? m + e.replace(sa, "$1" + H + "$2") : m + e + H;}A += e;
            }
          }f[d] = A.replace(N, "").trim();
        }c = f;
      }h = c;if (0 < D && (F = M(2, u, h, b, G, z, p, k, l), void 0 !== F && 0 === (u = F).length)) return L + u + S;u = h.join(",") + "{" + u + "}";if (0 < Q * K) {
        switch (K) {case 111:
            u = u.replace(ta, ":-moz-$1") + u;break;case 112:
            u = u.replace(X, "::-webkit-input-$1") + u.replace(X, "::-moz-$1") + u.replace(X, ":-ms-input-$1") + u;}K = 0;
      }
    }return L + u + S;
  }function ea(b, c, d) {
    var k = c.trim().split(ua);c = k;var l = k.length,
        a = b.length;switch (a) {case 0:case 1:
        var f = 0;for (b = 0 === a ? "" : b[0] + " "; f < l; ++f) {
          c[f] = ja(b, c[f], d, a).trim();
        }break;default:
        var m = f = 0;for (c = []; f < l; ++f) {
          for (var e = 0; e < a; ++e) {
            c[m++] = ja(b[e] + " ", k[f], d, a).trim();
          }
        }}return c;
  }function ja(b, c, d, k) {
    var l = c.charCodeAt(0);33 > l && (l = (c = c.trim()).charCodeAt(0));switch (l) {case 38:
        switch (E + k) {case 0:case 1:
            if (0 === b.trim().length) break;default:
            return c.replace(L, "$1" + b.trim());}break;case 58:
        switch (c.charCodeAt(1)) {case 103:
            if (0 < W && 0 < E) return c.replace(va, "$1").replace(L, "$1" + R);break;default:
            return b.trim() + c;}default:
        if (0 < d * E && 0 < c.indexOf("\f")) return c.replace(L, (58 === b.charCodeAt(0) ? "" : "$1") + b.trim());}return b + c;
  }function fa(b, c, d, k) {
    var l = 0,
        a = b + ";";c = 2 * c + 3 * d + 4 * k;if (944 === c) {
      k = a;b = k.length;d = k.indexOf(":", 9) + 1;l = k.substring(0, d).trim();b = k.substring(d, b - 1).trim();a = "";if (45 !== k.charCodeAt(9)) for (k = b.split(wa), d = c = 0, b = k.length; c < b; d = 0, ++c) {
        for (var f = k[c], m = f.split(xa); f = m[d];) {
          var e = f.charCodeAt(0);if (1 === O && (64 < e && 90 > e || 96 < e && 123 > e || 95 === e || 45 === e && 45 !== f.charCodeAt(1))) switch (isNaN(parseFloat(f)) + (-1 !== f.indexOf("("))) {case 1:
              switch (f) {case "infinite":case "alternate":case "backwards":case "running":case "normal":case "forwards":case "both":case "none":case "linear":case "ease":case "ease-in":case "ease-out":case "ease-in-out":case "paused":case "reverse":case "alternate-reverse":case "inherit":case "initial":case "unset":case "step-start":case "step-end":
                  break;
                default:
                  f += P;}}m[d++] = f;
        }a += (0 === c ? "" : ",") + m.join(" ");
      } else a += 110 === k.charCodeAt(10) ? b + (1 === O ? P : "") : b;a = l + a + ";";a = 0 < Q ? "-webkit-" + a + a : a;
    } else if (0 < Q) switch (c) {case 1015:
        return 45 === a.charCodeAt(9) ? "-webkit-" + a + a : a;case 951:
        return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;case 963:
        return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;case 969:case 942:
        return "-webkit-" + a + a;case 978:
        return "-webkit-" + a + "-moz-" + a + a;case 1019:case 983:
        return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;case 883:
        return 45 === a.charCodeAt(8) ? "-webkit-" + a + a : a;case 932:
        return "-webkit-" + a + "-ms-" + a + a;case 964:
        return "-webkit-" + a + "-ms-flex-" + a + a;case 1023:
        return b = a.substring(a.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify"), "-webkit-box-pack" + b + "-webkit-" + a + "-ms-flex-pack" + b + a;case 1005:
        return ya.test(a) ? a.replace(ka, ":-webkit-") + a.replace(ka, ":-moz-") + a : a;case 1E3:
        b = a.substring(13).trim();l = b.indexOf("-") + 1;switch (b.charCodeAt(0) + b.charCodeAt(l)) {case 226:
            b = a.replace(Y, "tb");break;case 232:
            b = a.replace(Y, "tb-rl");break;case 220:
            b = a.replace(Y, "lr");break;default:
            return a;}return "-webkit-" + a + "-ms-" + b + a;case 1017:
        if (-1 === a.indexOf("sticky", 9)) break;case 975:
        l = (a = b).length - 10;b = (33 === a.charCodeAt(l) ? a.substring(0, l) : a).substring(b.indexOf(":", 7) + 1).trim();switch (c = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {case 203:
            if (111 > b.charCodeAt(8)) break;case 115:
            a = a.replace(b, "-webkit-" + b) + ";" + a;break;case 207:case 102:
            a = a.replace(b, "-webkit-" + (102 < c ? "inline-" : "") + "box") + ";" + a.replace(b, "-webkit-" + b) + ";" + a.replace(b, "-ms-" + b + "box") + ";" + a;}return a + ";";case 938:
        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {case 105:
            return b = a.replace("-items", ""), "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a;case 115:
            return "-webkit-" + a + "-ms-flex-item-" + a.replace(za, "") + a;default:
            return "-webkit-" + a + "-ms-flex-line-pack" + a.replace("align-content", "") + a;}break;case 953:
        if (0 < (l = a.indexOf("-content", 9)) && 109 === a.charCodeAt(l - 3) && 45 !== a.charCodeAt(l - 4)) return b = a.substring(l - 3), "width:-webkit-" + b + "width:-moz-" + b + "width:" + b;break;case 962:
        if (a = "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a, 211 === d + k && 105 === a.charCodeAt(13) && 0 < a.indexOf("transform", 10)) return a.substring(0, a.indexOf(";", 27) + 1).replace(Aa, "$1-webkit-$2") + a;}return a;
  }function pa(b, c) {
    var d = fa(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));return d !== c + ";" ? d.replace(Ba, " or ($1)").substring(4) : "(" + c + ")";
  }function M(b, c, d, k, l, a, f, m, e) {
    for (var r = 0, n = c, h; r < D; ++r) {
      switch (h = Z[r].call(x, b, n, d, k, l, a, f, m, e)) {case void 0:case !1:case !0:case null:
          break;default:
          n = h;}
    }switch (n) {case void 0:case !1:case !0:case null:case c:
        break;
      default:
        return n;}
  }function aa(b) {
    switch (b) {case void 0:case null:
        D = Z.length = 0;break;default:
        switch (b.constructor) {case Array:
            for (var c = 0, d = b.length; c < d; ++c) {
              aa(b[c]);
            }break;case Function:
            Z[D++] = b;break;case Boolean:
            ia = !!b | 0;}}return aa;
  }function ba(b) {
    for (var c in b) {
      var d = b[c];switch (c) {case "keyframe":
          O = d | 0;break;case "global":
          W = d | 0;break;case "cascade":
          E = d | 0;break;case "compress":
          la = d | 0;break;case "prefix":
          Q = d | 0;break;case "semicolon":
          ha = d | 0;break;case "preserve":
          V = d | 0;}
    }return ba;
  }function x(b, c) {
    if (void 0 !== this && this.constructor === x) return ca(b);var d = b,
        k = d.charCodeAt(0);33 > k && (k = (d = d.trim()).charCodeAt(0));0 < O && (P = d.replace(Ca, 91 === k ? "" : "-"));k = 1;1 === E ? R = d : H = d;d = [R];if (0 < D) {
      var l = M(-1, c, d, d, G, z, 0, 0, 0);void 0 !== l && "string" === typeof l && (c = l);
    }var a = T(U, d, c, 0, 0);0 < D && (l = M(-2, a, d, d, G, z, a.length, 0, 0), void 0 !== l && "string" !== typeof (a = l) && (k = 0));H = R = P = "";K = 0;z = G = 1;return 0 === la * k ? a : a.replace(N, "").replace(Da, "").replace(Ea, "$1").replace(Fa, "$1").replace(Ga, " ");
  }var na = /^\0+/g,
      N = /[\0\r\f]/g,
      ka = /: */g,
      ya = /zoo|gra/,
      Aa = /([,: ])(transform)/g,
      wa = /,+\s*(?![^(]*[)])/g,
      xa = / +\s*(?![^(]*[)])/g,
      ra = / *[\0] */g,
      ua = /,\r+?/g,
      L = /([\t\r\n ])*\f?&/g,
      va = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,
      Ca = /\W+/g,
      qa = /@(k\w+)\s*(\S*)\s*/,
      X = /::(place)/g,
      ta = /:(read-only)/g,
      Da = /\s+(?=[{\];=:>])/g,
      Ea = /([[}=:>])\s+/g,
      Fa = /(\{[^{]+?);(?=\})/g,
      Ga = /\s{2,}/g,
      sa = /([^\(])(:+) */g,
      Y = /[svh]\w+-[tblr]{2}/,
      oa = /\(\s*([^]*?)\s*\)/g,
      Ba = /([^]*?);/g,
      za = /-self|flex-/g,
      z = 1,
      G = 1,
      K = 0,
      E = 1,
      Q = 1,
      W = 1,
      la = 0,
      ha = 0,
      V = 0,
      U = [],
      Z = [],
      D = 0,
      ia = 0,
      O = 1,
      P = "",
      H = "",
      R = "";
  x.use = aa;x.set = ba;void 0 !== da && ba(da);return x;
};

//  weak
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

var unitless = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  fontWeight: 1,
  lineClamp: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,

  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var stylisRuleSheet = createCommonjsModule(function (module, exports) {
	(function (factory) {
		module['exports'] = factory();
	})(function () {

		'use strict';

		return function (insertRule) {
			var delimiter = '/*|*/';
			var needle = delimiter + '}';

			function toSheet(block) {
				if (block) try {
					insertRule(block + '}');
				} catch (e) {}
			}

			return function ruleSheet(context, content, selectors, parents, line, column, length, at, depth) {
				switch (context) {
					// property
					case 1:
						// @import
						if (depth === 0 && content.charCodeAt(0) === 64) insertRule(content);
						break;
					// selector
					case 2:
						if (at === 0) return content + delimiter;
						break;
					// at-rule
					case 3:
						switch (at) {
							// @font-face, @page
							case 102:
							case 112:
								return insertRule(selectors[0] + content), '';
							default:
								return content + delimiter;
						}
					case -2:
						content.split(needle).forEach(toSheet);
				}
			};
		};
	});
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/*

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance
- 'polyfills' on server side

// usage

import StyleSheet from 'glamor/lib/sheet'
let styleSheet = new StyleSheet()

styleSheet.inject()
- 'injects' the stylesheet into the page (or into memory if on server)

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/

function sheetForTag(tag) {
  if (tag.sheet) {
    return tag.sheet;
  }

  // this weirdness brought to you by firefox
  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      return document.styleSheets[i];
    }
  }
}

function makeStyleTag() {
  var tag = document.createElement('style');
  tag.type = 'text/css';
  tag.setAttribute('data-emotion', '');
  tag.appendChild(document.createTextNode(''));
  document.head.appendChild(tag);
  return tag;
}

var StyleSheet = function () {
  function StyleSheet() {
    classCallCheck(this, StyleSheet);

    this.isBrowser = typeof window !== 'undefined';
    this.isSpeedy = process.env.NODE_ENV === 'production'; // the big drawback here is that the css won't be editable in devtools
    this.tags = [];
    this.ctr = 0;
  }

  StyleSheet.prototype.inject = function inject() {
    if (this.injected) {
      throw new Error('already injected!');
    }
    if (this.isBrowser) {
      this.tags[0] = makeStyleTag();
    } else {
      // server side 'polyfill'. just enough behavior to be useful.
      this.sheet = [];
    }
    this.injected = true;
  };

  StyleSheet.prototype.speedy = function speedy(bool) {
    if (this.ctr !== 0) {
      // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})
      throw new Error('cannot change speedy now');
    }
    this.isSpeedy = !!bool;
  };

  StyleSheet.prototype.insert = function insert(rule, sourceMap) {
    if (this.isBrowser) {
      // this is the ultrafast version, works across browsers
      if (this.isSpeedy) {
        var tag = this.tags[this.tags.length - 1];
        var sheet = sheetForTag(tag);

        try {
          sheet.insertRule(rule, sheet.cssRules.length);
        } catch (e) {
          if (process.env.NODE_ENV !== 'production') {
            console.warn('illegal rule', rule); // eslint-disable-line no-console
          }
        }
      } else {
        var _tag = makeStyleTag();
        this.tags.push(_tag);
        _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));
      }
      this.ctr++;
      if (this.ctr % 65000 === 0) {
        this.tags.push(makeStyleTag());
      }
    } else {
      // enough 'spec compliance' to be able to extract the rules later
      // in other words, just the rule
      this.sheet.push(rule);
    }
  };

  StyleSheet.prototype.flush = function flush() {
    if (this.isBrowser) {
      this.tags.forEach(function (tag) {
        return tag.parentNode.removeChild(tag);
      });
      this.tags = [];
      this.ctr = 0;
      // todo - look for remnants in document.styleSheets
    } else {
      // simpler on server
      this.sheet = [];
    }
    this.injected = false;
  };

  return StyleSheet;
}();

var sheet = new StyleSheet();

// 🚀
sheet.inject();
var stylisOptions = { keyframe: false };

if (process.env.NODE_ENV !== 'production') {
  stylisOptions.compress = false;
}

var stylis = new ma(stylisOptions);

function insertRule(rule) {
  sheet.insert(rule, currentSourceMap);
}

var insertionPlugin = stylisRuleSheet(insertRule);

var registered = {};

var inserted = {};

var currentSourceMap = '';

stylis.use(insertionPlugin);

function handleInterpolation(interpolation, couldBeSelectorInterpolation) {
  if (interpolation == null) {
    return '';
  }

  switch (typeof interpolation === 'undefined' ? 'undefined' : _typeof(interpolation)) {
    case 'boolean':
      return '';
    case 'function':
      return handleInterpolation.call(this, this === undefined ? interpolation() : interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);
    case 'object':
      return createStringFromObject.call(this, interpolation);
    default:
      var cached = registered[interpolation];
      return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;
  }
}

var hyphenateRegex = /[A-Z]|^ms/g;

var processStyleName = memoize(function (styleName) {
  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});

var processStyleValue = function processStyleValue(key, value) {
  if (value === undefined || value === null || typeof value === 'boolean') return '';

  if (unitless[key] !== 1 && !isNaN(value) && value !== 0) {
    return value + 'px';
  }
  return value;
};

var objectToStringCache = new WeakMap();

function createStringFromObject(obj) {
  if (objectToStringCache.has(obj)) {
    return objectToStringCache.get(obj);
  }
  var string = '';

  if (Array.isArray(obj)) {
    obj.forEach(function (interpolation) {
      string += handleInterpolation.call(this, interpolation, false);
    }, this);
  } else {
    Object.keys(obj).forEach(function (key) {
      if (_typeof(obj[key]) !== 'object') {
        if (registered[obj[key]] !== undefined) {
          string += key + '{' + registered[obj[key]] + '}';
        } else {
          string += processStyleName(key) + ':' + processStyleValue(key, obj[key]) + ';';
        }
      } else {
        string += key + '{' + handleInterpolation.call(this, obj[key], false) + '}';
      }
    }, this);
  }
  objectToStringCache.set(obj, string);

  return string;
}

function isLastCharDot(string) {
  return string.charCodeAt(string.length - 1) === 46; // .
}

function createStyles(strings) {
  var stringMode = true;
  var styles = '';
  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles = handleInterpolation.call(this, strings, false);
  } else {
    styles = strings[0];
  }

  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  interpolations.forEach(function (interpolation, i) {
    styles += handleInterpolation.call(this, interpolation, isLastCharDot(styles));
    if (stringMode === true && strings[i + 1] !== undefined) {
      styles += strings[i + 1];
    }
  }, this);

  return styles;
}

if (process.env.NODE_ENV !== 'production') {
  var sourceMapRegEx = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\/\s+\/\*@\ssourceURL=\S+\s+\*\//;
  var oldStylis = stylis;
  stylis = function stylis(selector, styles) {
    var result = sourceMapRegEx.exec(styles);
    currentSourceMap = result ? result[0] : '';
    oldStylis(selector, styles);
    currentSourceMap = '';
  };
}

function css() {
  var styles = createStyles.apply(this, arguments);

  var hash = hashString(styles);
  var cls = 'css-' + hash;

  if (registered[cls] === undefined) {
    registered[cls] = styles;
  }
  if (inserted[hash] === undefined) {
    stylis('.' + cls, styles);
    inserted[hash] = true;
  }
  return cls;
}

/**
 * Converts breakpoint units in px to rem or em
 * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value
 * @param {number} [16] ratio - size of 1 rem in px. What is your main font-size in px? 
 * @param {'rem' | 'em'} unit
 */
function pxToEmOrRem(breakpoints) {
  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;
  var unit = arguments[2];

  var newBreakpoints = {};

  for (var key in breakpoints) {
    var point = breakpoints[key];

    if (String(point).includes('px')) {
      newBreakpoints[key] = +(parseInt(point) / ratio) + unit;
      continue;
    }

    newBreakpoints[key] = point;
  }

  return newBreakpoints;
}

/**
 * Converts breakpoint units in px to em 
 * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value
 * @param {number} [16] ratio - size of 1em in px. What is your main font-size in px? 
 */
function pxToEm(breakpoints) {
  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;

  return pxToEmOrRem(breakpoints, ratio, 'em');
}

/**
 * Converts breakpoint units in px to rem 
 * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value
 * @param {number} [16] ratio - size of 1rem in px. What is your main font-size in px? 
 */
function pxToRem(breakpoints) {
  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;

  return pxToEmOrRem(breakpoints, ratio, 'rem');
}

var _templateObject = _taggedTemplateLiteralLoose(['\n    @media (max-width: ', ') {\n      ', '\n    }\n  '], ['\n    @media (max-width: ', ') {\n      ', '\n    }\n  ']);
var _templateObject2 = _taggedTemplateLiteralLoose(['\n    @media (min-width: ', ') {\n      ', '\n    }\n  '], ['\n    @media (min-width: ', ') {\n      ', '\n    }\n  ']);
var _templateObject3 = _taggedTemplateLiteralLoose(['\n    @media (min-width: ', ') and\n      (max-width: ', ') {\n      ', '\n    }\n  '], ['\n    @media (min-width: ', ') and\n      (max-width: ', ') {\n      ', '\n    }\n  ']);
var _templateObject4 = _taggedTemplateLiteralLoose(['\n          @media (max-width: ', ') {\n            ', '\n          }\n        '], ['\n          @media (max-width: ', ') {\n            ', '\n          }\n        ']);
var _templateObject5 = _taggedTemplateLiteralLoose(['\n          @media (min-width: ', ') {\n            ', '\n          }\n        '], ['\n          @media (min-width: ', ') {\n            ', '\n          }\n        ']);

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

/**
 * Default media breakpoints
 * @type {Object}
 */
var defaultBreakpoints = {
  huge: '1440px',
  large: '1170px',
  medium: '768px',
  small: '450px'
};

function getSizeFromBreakpoint(breakpointValue) {
  var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (breakpoints[breakpointValue]) {
    return breakpoints[breakpointValue];
  } else if (parseInt(breakpointValue)) {
    return breakpointValue;
  } else {
    console.error('emotion-media-query: No valid breakpoint or size specified for media.');
    return '0';
  }
}

/**
 * Media query generator
 * @param {Object} [defaultBreakpoints] breakpoints - Map labels to breakpoint sizes
 * @return {Object} - Media generators for each breakpoint
 */
function generateMedia() {
  var breakpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBreakpoints;

  var lessThan = function lessThan(breakpoint) {
    return function () {
      return css(_templateObject, getSizeFromBreakpoint(breakpoint, breakpoints), css.apply(undefined, arguments));
    };
  };

  var greaterThan = function greaterThan(breakpoint) {
    return function () {
      return css(_templateObject2, getSizeFromBreakpoint(breakpoint, breakpoints), css.apply(undefined, arguments));
    };
  };

  var between = function between(firstBreakpoint, secondBreakpoint) {
    return function () {
      return css(_templateObject3, getSizeFromBreakpoint(firstBreakpoint, breakpoints), getSizeFromBreakpoint(secondBreakpoint, breakpoints), css.apply(undefined, arguments));
    };
  };

  var oldStyle = Object.keys(breakpoints).reduce(function (acc, label) {
    var size = breakpoints[label];

    acc.to[label] = function () {
      console.warn('emotion-media-query: Use media.lessThan(\'' + label + '\') instead of old media.to.' + label + ' (Probably we\'ll deprecate it)');
      return css(_templateObject4, size, css.apply(undefined, arguments));
    };

    acc.from[label] = function () {
      console.warn('emotion-media-query: Use media.greaterThan(\'' + label + '\') instead of old media.from.' + label + ' (Probably we\'ll deprecate it)');
      return css(_templateObject5, size, css.apply(undefined, arguments));
    };

    return acc;
  }, { to: {}, from: {} });

  return Object.assign({
    lessThan: lessThan,
    greaterThan: greaterThan,
    between: between
  }, oldStyle);
}

/**
 * Media object with default breakpoints
 * @return {object} - Media generators for each size
 */
var index = generateMedia();

/**
 * Usage: emotion.div` ${media.from.medium`background: #000;`} `;
 * With this code, background for small and medium sizes will be `default` and for more than medium, will be `#000`
 */

exports.pxToEm = pxToEm;
exports.pxToRem = pxToRem;
exports.defaultBreakpoints = defaultBreakpoints;
exports.generateMedia = generateMedia;
exports['default'] = index;
//# sourceMappingURL=emotion-media-query.common.js.map
